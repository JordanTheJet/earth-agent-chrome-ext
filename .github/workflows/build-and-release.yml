name: Build and Release Extension

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v1.2.3, etc.
  workflow_dispatch:  # Allows manual triggering

# Add permissions for the workflow
permissions:
  contents: write
  packages: write
  pull-requests: write
  issues: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        # Try npm ci first, fall back to legacy peer deps if needed
        npm ci || npm ci --legacy-peer-deps
      
    - name: Run type check
      run: npm run type-check
      
    - name: Build extension for production
      run: |
        # Clean any existing dist folder
        rm -rf dist
        
        # Build the extension
        npm run build
        
        # Verify build was successful
        if [ ! -f "dist/manifest.json" ]; then
          echo "Build failed - manifest.json not found in dist folder"
          exit 1
        fi
        
        echo "Build completed successfully. Dist folder contents:"
        ls -la dist/
        
    - name: Update manifest version
      run: |
        # Extract version from git tag (remove 'v' prefix)
        VERSION=${GITHUB_REF#refs/tags/v}
        
        # Update manifest.json version
        sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" dist/manifest.json
        
        # Verify version was updated
        echo "Updated manifest.json version to: $VERSION"
        grep "version" dist/manifest.json
        
    - name: Verify extension files
      run: |
        echo "Verifying required extension files are present:"
        required_files=("manifest.json" "background.js" "content.js" "sidepanel.html" "sidepanel.js")
        
        for file in "${required_files[@]}"; do
          if [ -f "dist/$file" ]; then
            echo "‚úì $file exists ($(du -h dist/$file | cut -f1))"
          else
            echo "‚úó $file missing!"
            exit 1
          fi
        done
        
    - name: Create extension package
      run: |
        # Create the extension zip from dist folder
        cd dist
        zip -r ../earth-agent-extension.zip . -x "*.DS_Store" "*.map"
        cd ..
        
        # Verify the zip was created and show its contents
        echo "Extension package created. Contents:"
        unzip -l earth-agent-extension.zip | head -20
        
        # Show package size
        echo "Package size: $(du -h earth-agent-extension.zip | cut -f1)"
        
    - name: Create source package
      run: |
        # Create source zip excluding build artifacts and dependencies
        zip -r earth-agent-source.zip . \
          -x "node_modules/*" \
          -x "dist/*" \
          -x ".git/*" \
          -x "*.log" \
          -x ".DS_Store" \
          -x "coverage/*" \
          -x "*.tgz" \
          -x "*.zip"
          
    - name: Get tag name
      id: tag_name
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag_name.outputs.TAG_NAME }}
        name: Earth Agent Extension ${{ steps.tag_name.outputs.TAG_NAME }}
        body: |
          ## Earth Agent Extension ${{ steps.tag_name.outputs.TAG_NAME }}
          
          ### üì¶ Installation Instructions
          
          **For Users (Recommended):**
          1. Download `earth-agent-extension.zip` below
          2. Extract the zip file to a folder on your computer
          3. Open Chrome and navigate to `chrome://extensions/`
          4. Enable "Developer mode" (toggle in top right)
          5. Click "Load unpacked" and select the extracted folder
          6. The extension will appear in your Chrome toolbar
          
          **For Developers:**
          - Download `earth-agent-source.zip` for the source code
          
          ### üîß Configuration
          After installation:
          1. Click the Earth Agent extension icon
          2. Go to Settings
          3. Add your OpenAI or Anthropic API key
          4. Select your preferred AI provider and model
          5. Start chatting with Earth Engine!
          
          ### üìã What's Included
          - `earth-agent-extension.zip` - **Ready-to-install Chrome extension** (built files)
          - `earth-agent-source.zip` - Source code package for developers
          
          ### üîí Privacy
          This extension stores data locally and communicates directly with AI providers. See our [Privacy Policy](https://github.com/${{ github.repository }}/blob/main/PRIVACY_POLICY.md) for details.
          
          ### ‚ö†Ô∏è Important
          Make sure to download `earth-agent-extension.zip` for installation, not the source code package.
        files: |
          earth-agent-extension.zip
          earth-agent-source.zip
        draft: false
        prerelease: false