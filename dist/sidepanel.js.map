{"version":3,"file":"sidepanel.js","mappings":";;;;;;AAMA,MAAM,SAAS;IAIb;QACE,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAgB,CAAC;QACxE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEO,cAAc;QACpB,mCAAmC;QACnC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;QAE1D,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,OAAgB,EAAE,EAAE;YACnD,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;YAC1C,2BAA2B;QAC7B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,EAAE;YACtC,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;YACnD,gDAAgD;QAClD,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,mBAAmB;QACzB,+CAA+C;QAC/C,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;IAC5C,CAAC;IAED,mDAAmD;IAC3C,WAAW,CAAC,OAAgB;QAClC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;CACF;AAED,kDAAkD;AAClD,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,EAAE;IACjD,IAAI,SAAS,EAAE,CAAC;AAClB,CAAC,CAAC,CAAC","sources":["webpack://earth-agent-ai-sdk/./src/sidepanel/index.ts"],"sourcesContent":["// Types\ninterface Message {\n  type: string;\n  payload?: any;\n}\n\nclass SidePanel {\n  private port!: chrome.runtime.Port;\n  private contentElement: HTMLElement;\n\n  constructor() {\n    this.contentElement = document.getElementById('content') as HTMLElement;\n    this.initializePort();\n    this.setupEventListeners();\n  }\n\n  private initializePort() {\n    // Connect to the background script\n    this.port = chrome.runtime.connect({ name: 'sidepanel' });\n    \n    this.port.onMessage.addListener((message: Message) => {\n      console.log('Received message:', message);\n      // Handle incoming messages\n    });\n\n    this.port.onDisconnect.addListener(() => {\n      console.log('Disconnected from background script');\n      // Handle disconnection (e.g., try to reconnect)\n    });\n  }\n\n  private setupEventListeners() {\n    // Add event listeners for UI interactions here\n    console.log('Setting up event listeners');\n  }\n\n  // Method to send messages to the background script\n  private sendMessage(message: Message) {\n    this.port.postMessage(message);\n  }\n}\n\n// Initialize the side panel when the DOM is ready\ndocument.addEventListener('DOMContentLoaded', () => {\n  new SidePanel();\n}); "],"names":[],"sourceRoot":""}