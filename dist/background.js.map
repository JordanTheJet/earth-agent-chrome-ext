{"version":3,"file":"background.js","mappings":"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","sources":["webpack://earth-agent-ai-sdk/./src/background/routes.ts","webpack://earth-agent-ai-sdk/./src/lib/tools/context7/getDocumentation.ts","webpack://earth-agent-ai-sdk/./src/lib/tools/context7/index.ts","webpack://earth-agent-ai-sdk/./src/lib/tools/context7/resolveLibraryId.ts","webpack://earth-agent-ai-sdk/webpack/bootstrap","webpack://earth-agent-ai-sdk/webpack/runtime/define property getters","webpack://earth-agent-ai-sdk/webpack/runtime/hasOwnProperty shorthand","webpack://earth-agent-ai-sdk/webpack/runtime/make namespace object","webpack://earth-agent-ai-sdk/./src/background/index.ts"],"sourcesContent":["import { Message } from 'ai';\n\n// Earth Engine system prompt with domain expertise\nconst GEE_SYSTEM_PROMPT = `You are Earth Engine Assistant, an AI specialized in Google Earth Engine (GEE) geospatial analysis.\n\nYour capabilities:\n- Provide code examples for GEE tasks like image processing, classification, and visualization\n- Explain Earth Engine concepts, APIs, and best practices\n- Help troubleshoot Earth Engine code issues\n- Recommend appropriate datasets and methods for geospatial analysis\n\nInstructions:\n- Always provide code within backticks: \\`code\\`\n- Format Earth Engine code with proper JavaScript/Python syntax\n- When suggesting large code blocks, include comments explaining key steps\n- Cite specific Earth Engine functions and methods when relevant\n- For complex topics, break down explanations step-by-step\n- If you're unsure about something, acknowledge limitations rather than providing incorrect information\n\nCommon Earth Engine patterns:\n- Image and collection loading: ee.Image(), ee.ImageCollection()\n- Filtering: .filterDate(), .filterBounds()\n- Reducing: .reduce(), .mean(), .median()\n- Visualization: Map.addLayer(), ui.Map(), ui.Chart()\n- Classification: .classify(), ee.Classifier.randomForest()\n- Exporting: Export.image.toDrive(), Export.table.toAsset()\n\nSpeak in a helpful, educational tone while providing practical guidance for Earth Engine tasks.`;\n\n// Route handler for /api/chat\nexport async function handleChatRoute(request: Request): Promise<Response> {\n  try {\n    const { messages, apiKey, provider } = await request.json();\n    \n    if (!apiKey) {\n      return new Response(JSON.stringify({ error: 'API key not configured' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    if (!messages || !Array.isArray(messages) || messages.length === 0) {\n      return new Response(JSON.stringify({ error: 'No messages provided' }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Stream response based on the provider\n    let responseStream: ReadableStream;\n    \n    if (provider === 'openai') {\n      responseStream = await streamOpenAIResponse(apiKey, messages);\n    } else if (provider === 'anthropic') {\n      responseStream = await streamAnthropicResponse(apiKey, messages);\n    } else {\n      return new Response(JSON.stringify({ error: 'Unsupported API provider' }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Create a streamText-compatible response\n    return new Response(responseStream, {\n      headers: {\n        'Content-Type': 'text/plain; charset=utf-8',\n        'X-Content-Type-Options': 'nosniff',\n        'Cache-Control': 'no-store',\n      }\n    });\n  } catch (error: any) {\n    console.error('Chat API error:', error);\n    return new Response(JSON.stringify({ error: error.message || 'An error occurred' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n// Stream API for OpenAI\nasync function streamOpenAIResponse(apiKey: string, messages: Message[]): Promise<ReadableStream> {\n  const response = await fetch('https://api.openai.com/v1/chat/completions', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${apiKey}`\n    },\n    body: JSON.stringify({\n      model: 'gpt-4o',\n      messages: [\n        { role: 'system', content: GEE_SYSTEM_PROMPT },\n        ...messages.map(msg => ({\n          role: msg.role,\n          content: msg.content\n        }))\n      ],\n      temperature: 0.2,\n      stream: true,\n    })\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error?.message || 'Error calling OpenAI API');\n  }\n\n  // Direct passthrough of the streaming response\n  return response.body as ReadableStream;\n}\n\n// Stream API for Anthropic\nasync function streamAnthropicResponse(apiKey: string, messages: Message[]): Promise<ReadableStream> {\n  const response = await fetch('https://api.anthropic.com/v1/messages', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'x-api-key': apiKey,\n      'anthropic-version': '2023-06-01',\n      'Accept': 'text/event-stream' \n    },\n    body: JSON.stringify({\n      model: 'claude-3-haiku-20240307',\n      max_tokens: 4000,\n      system: GEE_SYSTEM_PROMPT,\n      messages: messages.map(msg => ({\n        role: msg.role,\n        content: msg.content\n      })),\n      temperature: 0.2,\n      stream: true,\n    })\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.error?.message || 'Error calling Anthropic API');\n  }\n\n  // Direct passthrough of the streaming response\n  return response.body as ReadableStream;\n}","/**\n * Fetches documentation for Google Earth Engine datasets from Context7\n * This tool uses a Context7-compatible library ID (obtained from resolveLibraryId)\n * to fetch documentation about Earth Engine datasets\n * \n * @param context7CompatibleLibraryID - The library ID from resolveLibraryId (e.g., \"wybert/earthengine-dataset-catalog-md\")\n * @param topic - Optional topic to filter documentation (e.g., \"population\", \"landsat\")\n * @param options - Additional options for the request (tokens, folders)\n * @returns The documentation content, success status, and any error messages\n */\n\nexport interface GetDocumentationResponse {\n  success: boolean;\n  content: string | null;\n  message?: string;\n}\n\n// Define the base URL for Context7 API\nconst CONTEXT7_API_BASE_URL = \"https://context7.com/api\";\nconst DEFAULT_TYPE = \"txt\";\n\nexport async function getDocumentation(\n  context7CompatibleLibraryID: string,\n  topic?: string,\n  options: {\n    tokens?: number;\n    folders?: string;\n  } = {}\n): Promise<GetDocumentationResponse> {\n  try {\n    // Check if we have a valid library ID\n    if (!context7CompatibleLibraryID) {\n      return {\n        success: false,\n        content: null,\n        message: 'Missing Context7-compatible library ID. Use resolveLibraryId first.',\n      };\n    }\n\n    // If running in a content script or sidepanel context, use the background script\n    if (typeof chrome !== 'undefined' && chrome.runtime) {\n      return new Promise<GetDocumentationResponse>((resolve) => {\n        // Add a timeout to handle cases where background script doesn't respond\n        const timeoutId = setTimeout(() => {\n          console.warn('Background script connection timed out. Falling back to direct API call.');\n          // Fall back to direct API call if background script isn't responding\n          makeDirectApiCall(context7CompatibleLibraryID, topic, options).then(resolve);\n        }, 2000); // 2 second timeout\n        \n        try {\n          chrome.runtime.sendMessage(\n            {\n              type: 'CONTEXT7_GET_DOCUMENTATION',\n              libraryId: context7CompatibleLibraryID,\n              topic,\n              options\n            },\n            (response) => {\n              // Clear the timeout since we got a response\n              clearTimeout(timeoutId);\n              \n              if (chrome.runtime.lastError) {\n                console.warn('Chrome runtime error:', chrome.runtime.lastError);\n                console.info('Falling back to direct API call...');\n                // Fall back to direct API call if there's a communication error\n                makeDirectApiCall(context7CompatibleLibraryID, topic, options).then(resolve);\n                return;\n              }\n              \n              // We got a valid response from the background\n              resolve(response);\n            }\n          );\n        } catch (err) {\n          // Clear the timeout\n          clearTimeout(timeoutId);\n          console.error('Error sending message to background script:', err);\n          console.info('Falling back to direct API call...');\n          // Fall back to direct API call if there's an exception\n          makeDirectApiCall(context7CompatibleLibraryID, topic, options).then(resolve);\n        }\n      });\n    }\n\n    // Direct API call when running in background script or Node.js environment\n    return makeDirectApiCall(context7CompatibleLibraryID, topic, options);\n  } catch (error) {\n    return {\n      success: false,\n      content: null,\n      message: `Error fetching documentation: ${error instanceof Error ? error.message : String(error)}`,\n    };\n  }\n}\n\n/**\n * Helper function to make a direct API call to Context7\n * Used as a fallback when background script communication fails\n */\nasync function makeDirectApiCall(\n  context7CompatibleLibraryID: string,\n  topic?: string,\n  options: {\n    tokens?: number;\n    folders?: string;\n  } = {}\n): Promise<GetDocumentationResponse> {\n  try {\n    // Remove leading slash if present\n    if (context7CompatibleLibraryID.startsWith(\"/\")) {\n      context7CompatibleLibraryID = context7CompatibleLibraryID.slice(1);\n    }\n\n    // Build the URL using URL object\n    const url = new URL(`${CONTEXT7_API_BASE_URL}/v1/${context7CompatibleLibraryID}`);\n    \n    // Add options to URL params\n    if (options.tokens) url.searchParams.set(\"tokens\", options.tokens.toString());\n    if (options.folders) url.searchParams.set(\"folders\", options.folders);\n    if (topic) url.searchParams.set(\"topic\", topic);\n    url.searchParams.set(\"type\", DEFAULT_TYPE);\n    \n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json, text/plain',\n        'X-Context7-Source': 'earth-agent-ai-sdk',\n      },\n    });\n\n    if (!response.ok) {\n      return {\n        success: false,\n        content: null,\n        message: `Failed to fetch documentation: ${response.statusText}`,\n      };\n    }\n\n    // Get the text content directly\n    const text = await response.text();\n    \n    // Check if the text is valid\n    if (!text || text === \"No content available\" || text === \"No context data available\") {\n      return {\n        success: false,\n        content: null,\n        message: 'No documentation content found',\n      };\n    }\n    \n    // Try to parse as JSON in case of JSON response\n    try {\n      const data = JSON.parse(text);\n      if (data && data.content) {\n        return {\n          success: true,\n          content: data.content,\n        };\n      }\n    } catch (e) {\n      // Not JSON, use text as is\n    }\n    \n    // Return the text content directly\n    return {\n      success: true,\n      content: text,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      content: null,\n      message: `Error making direct API call: ${error instanceof Error ? error.message : String(error)}`,\n    };\n  }\n}\n\nexport default getDocumentation; ","/**\n * Context7 tools for fetching Google Earth Engine dataset documentation\n * \n * This module provides tools to:\n * 1. Resolve library names to Context7-compatible IDs\n * 2. Fetch detailed documentation about Earth Engine datasets\n * \n * Usage example:\n * ```typescript\n * import { resolveLibraryId, getDocumentation } from './lib/tools/context7';\n * \n * async function fetchLandsatDocs() {\n *   // First, resolve the library ID\n *   const resolveResult = await resolveLibraryId('Earth Engine datasets');\n *   \n *   if (resolveResult.success && resolveResult.libraryId) {\n *     // Then fetch documentation about Landsat\n *     const docs = await getDocumentation(resolveResult.libraryId, 'Landsat');\n *     \n *     if (docs.success && docs.content) {\n *       console.log(docs.content);\n *     }\n *   }\n * }\n * ```\n */\n\nexport { default as resolveLibraryId } from './resolveLibraryId';\nexport { default as getDocumentation } from './getDocumentation';\n\n// Also export the types for better type checking\nexport type { \n  ResolveLibraryIdResponse \n} from './resolveLibraryId';\n\nexport type { \n  GetDocumentationResponse \n} from './getDocumentation'; ","/**\n * Resolves a general library name into a Context7-compatible library ID\n * This tool is required as a first step before using getDocumentation\n * to retrieve Earth Engine dataset documentation\n * \n * @param libraryName - The library name to search for (e.g., \"Earth Engine\", \"MODIS\")\n * @returns The Context7-compatible library ID that can be used with getDocumentation\n */\n\nexport interface ResolveLibraryIdResponse {\n  success: boolean;\n  libraryId: string | null;\n  message?: string;\n  alternatives?: string[];\n}\n\n// Define the base URL for Context7 API\nconst CONTEXT7_API_BASE_URL = \"https://context7.com/api\";\n\nexport async function resolveLibraryId(libraryName: string): Promise<ResolveLibraryIdResponse> {\n  try {\n    // If running in a content script or sidepanel context, use the background script\n    if (typeof chrome !== 'undefined' && chrome.runtime) {\n      // Check if background script is available\n      // Add a timeout to prevent hanging if background isn't responsive\n      return new Promise<ResolveLibraryIdResponse>((resolve) => {\n        // Add a timeout to handle cases where the background script doesn't respond\n        const timeoutId = setTimeout(() => {\n          console.warn('Background script connection timed out. Falling back to direct API call.');\n          // Fall back to direct API call if background script isn't responding\n          makeDirectApiCall(libraryName).then(resolve);\n        }, 2000); // 2 second timeout\n        \n        try {\n          chrome.runtime.sendMessage(\n            {\n              type: 'CONTEXT7_RESOLVE_LIBRARY_ID',\n              libraryName\n            },\n            (response) => {\n              // Clear the timeout since we got a response\n              clearTimeout(timeoutId);\n              \n              // Handle error if present\n              if (chrome.runtime.lastError) {\n                console.warn('Chrome runtime error:', chrome.runtime.lastError);\n                console.info('Falling back to direct API call...');\n                // Fall back to direct API call if there's a communication error\n                makeDirectApiCall(libraryName).then(resolve);\n                return;\n              }\n              \n              // We got a valid response from the background\n              resolve(response);\n            }\n          );\n        } catch (err) {\n          // Clear the timeout\n          clearTimeout(timeoutId);\n          console.error('Error sending message to background script:', err);\n          console.info('Falling back to direct API call...');\n          // Fall back to direct API call if there's an exception\n          makeDirectApiCall(libraryName).then(resolve);\n        }\n      });\n    }\n    \n    // Direct API call when running in background script or Node.js environment\n    return makeDirectApiCall(libraryName);\n  } catch (error) {\n    return {\n      success: false,\n      libraryId: null,\n      message: `Error resolving library ID: ${error instanceof Error ? error.message : String(error)}`,\n    };\n  }\n}\n\n/**\n * Helper function to make a direct API call to Context7\n * Used as a fallback when background script communication fails\n */\nasync function makeDirectApiCall(libraryName: string): Promise<ResolveLibraryIdResponse> {\n  try {\n    // Create URL object using the base URL\n    const url = new URL(`${CONTEXT7_API_BASE_URL}/v1/search`);\n    // Set search params using proper URL API\n    url.searchParams.set(\"query\", libraryName);\n    \n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'X-Context7-Source': 'earth-agent-ai-sdk',\n      },\n    });\n\n    if (!response.ok) {\n      return {\n        success: false,\n        libraryId: null,\n        message: `Failed to search for library ID: ${response.statusText}`,\n      };\n    }\n\n    const data = await response.json();\n    \n    // Check if we got valid results\n    if (data && Array.isArray(data.results) && data.results.length > 0) {\n      // Find the best match for Earth Engine datasets\n      const earthEngineMatch = data.results.find(\n        (result: any) => result.id && \n        (result.id.includes('earthengine') || \n         result.id.includes('earth-engine') ||\n         result.title?.toLowerCase().includes('earth engine'))\n      );\n      \n      if (earthEngineMatch) {\n        return {\n          success: true,\n          libraryId: earthEngineMatch.id,\n        };\n      }\n      \n      // If no Earth Engine specific match, return the first result\n      return {\n        success: true,\n        libraryId: data.results[0].id,\n        alternatives: data.results.slice(1, 5).map((result: any) => result.id),\n      };\n    }\n    \n    return {\n      success: false,\n      libraryId: null,\n      message: 'No matching library found',\n      alternatives: data?.results?.map((result: any) => result.id) || [],\n    };\n  } catch (error) {\n    return {\n      success: false,\n      libraryId: null,\n      message: `Error making direct API call: ${error instanceof Error ? error.message : String(error)}`,\n    };\n  }\n}\n\nexport default resolveLibraryId; ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { handleChatRoute } from './routes';\nimport { resolveLibraryId, getDocumentation } from '../lib/tools/context7';\n\n// Types for messages between components\ninterface Message {\n  type: string;\n  payload?: any;\n  [key: string]: any; // Allow for additional properties\n}\n\n// Store information about loaded content scripts\nconst contentScriptTabs = new Map<number, boolean>();\n\n// Timing constants\nconst CONTENT_SCRIPT_PING_TIMEOUT = 5000; // 5 seconds\nconst TAB_ACTION_RETRY_DELAY = 1000; // 1 second\nconst MAX_TAB_ACTION_RETRIES = 3;\n\n// Handle extension icon click\nchrome.action.onClicked.addListener(async (tab) => {\n  // Only open side panel if we're on the Earth Engine Code Editor\n  if (tab.url?.startsWith('https://code.earthengine.google.com/')) {\n    // Open the side panel\n    await chrome.sidePanel.open({ windowId: tab.windowId });\n    await chrome.sidePanel.setOptions({\n      enabled: true,\n      path: 'sidepanel.html'\n    });\n  } else {\n    // If not on Earth Engine, create a new tab with Earth Engine\n    await chrome.tabs.create({\n      url: 'https://code.earthengine.google.com/'\n    });\n  }\n});\n\n// Validate server identity with better error handling\nasync function validateServerIdentity(host: string, port: number): Promise<boolean> {\n  try {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 3000); // 3 second timeout\n    \n    const response = await fetch(`http://${host}:${port}/.identity`, {\n      signal: controller.signal,\n    });\n    \n    clearTimeout(timeoutId);\n    \n    if (!response.ok) {\n      console.error(`Invalid server response: ${response.status}`);\n      return false;\n    }\n\n    const identity = await response.json();\n\n    // Validate the server signature\n    if (identity && identity.signature === \"mcp-browser-connector-24x7\") {\n      return true;\n    } else {\n      console.error(\"Invalid server signature - not the browser tools server\");\n      return false;\n    }\n  } catch (error) {\n    // Handle network errors more gracefully\n    console.error(\"Error validating server identity:\", error);\n    \n    // Don't throw an error, just return false if we can't connect\n    return false;\n  }\n}\n\n// Forward message to Earth Engine tab with improved error handling and retries\nasync function sendMessageToEarthEngineTab(message: any, options?: { timeout?: number, retries?: number }): Promise<any> {\n  const timeout = options?.timeout || CONTENT_SCRIPT_PING_TIMEOUT;\n  const maxRetries = options?.retries || MAX_TAB_ACTION_RETRIES;\n  let retryCount = 0;\n  \n  console.log('Forwarding message to Earth Engine tab:', message);\n  \n  async function attemptSend(): Promise<any> {\n    // Find Earth Engine tab\n    const tabs = await chrome.tabs.query({ url: \"*://code.earthengine.google.com/*\" });\n    \n    if (!tabs || tabs.length === 0) {\n      console.error('No Earth Engine tab found');\n      return {\n        success: false,\n        error: 'No Earth Engine tab found. Please open Google Earth Engine at https://code.earthengine.google.com/ in a tab and try again.'\n      };\n    }\n    \n    const tabId = tabs[0].id;\n    if (!tabId) {\n      console.error('Invalid Earth Engine tab');\n      return {\n        success: false,\n        error: 'Invalid Earth Engine tab'\n      };\n    }\n\n    // Check if we know the content script is loaded\n    if (!contentScriptTabs.has(tabId)) {\n      console.log(`Content script not registered for tab ${tabId}, checking with PING...`);\n      \n      // Try to ping the content script first\n      try {\n        await pingContentScript(tabId, timeout);\n        console.log(`Content script responded to PING in tab ${tabId}`);\n        contentScriptTabs.set(tabId, true);\n      } catch (error) {\n        console.error(`Content script did not respond to PING in tab ${tabId}:`, error);\n        \n        // If we've already retried too many times, give up\n        if (retryCount >= maxRetries) {\n          return {\n            success: false,\n            error: `Content script did not respond after ${maxRetries} attempts. Please ensure you have the Google Earth Engine tab open and fully loaded at https://code.earthengine.google.com/`\n          };\n        }\n        \n        // Try to reload the content script by refreshing the tab\n        try {\n          console.log(`Attempting to reload content script in tab ${tabId}...`);\n          await chrome.tabs.reload(tabId);\n          \n          // Wait for the page to reload and content script to initialize\n          await new Promise(resolve => setTimeout(resolve, 2000));\n          \n          // Increment retry count and try again\n          retryCount++;\n          console.log(`Retrying after tab reload (attempt ${retryCount}/${maxRetries})...`);\n          return attemptSend();\n        } catch (reloadError) {\n          return {\n            success: false,\n            error: 'Content script not loaded and tab refresh failed. Please ensure the Earth Engine tab is open and refresh it manually.'\n          };\n        }\n      }\n    }\n    \n    // Send message to the content script in the Earth Engine tab\n    try {\n      console.log(`Sending message to tab ${tabId}`);\n      \n      // Use a timeout promise to handle cases where chrome.tabs.sendMessage doesn't reject\n      const messagePromise = new Promise<any>((resolve, reject) => {\n        const timeoutId = setTimeout(() => {\n          // Remove tab from tracking if timeout occurs\n          contentScriptTabs.delete(tabId);\n          reject(new Error(`Message to tab ${tabId} timed out after ${timeout}ms`));\n        }, timeout);\n        \n        chrome.tabs.sendMessage(tabId, message, (response) => {\n          clearTimeout(timeoutId);\n          \n          if (chrome.runtime.lastError) {\n            reject(chrome.runtime.lastError);\n            return;\n          }\n          \n          resolve(response);\n        });\n      });\n      \n      const response = await messagePromise;\n      console.log('Received response from Earth Engine tab:', response);\n      return response;\n    } catch (error) {\n      console.error('Error communicating with Earth Engine tab:', error);\n      \n      // If communication fails, remove tab from tracked tabs so we'll try to ping again next time\n      contentScriptTabs.delete(tabId);\n      \n      // If we have retries left, try again\n      if (retryCount < maxRetries) {\n        retryCount++;\n        console.log(`Communication failed, retrying (attempt ${retryCount}/${maxRetries})...`);\n        await new Promise(resolve => setTimeout(resolve, TAB_ACTION_RETRY_DELAY));\n        return attemptSend();\n      }\n      \n      return {\n        success: false,\n        error: `Error communicating with Earth Engine tab: ${error instanceof Error ? error.message : String(error)}.\n        Please make sure the Earth Engine tab is open and active at https://code.earthengine.google.com/`\n      };\n    }\n  }\n  \n  return attemptSend();\n}\n\n// Helper function to ping content script with timeout\nfunction pingContentScript(tabId: number, timeout = CONTENT_SCRIPT_PING_TIMEOUT): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      reject(new Error('Content script ping timed out'));\n    }, timeout);\n    \n    chrome.tabs.sendMessage(tabId, { type: 'PING' }, (response) => {\n      clearTimeout(timeoutId);\n      \n      if (chrome.runtime.lastError) {\n        reject(chrome.runtime.lastError);\n        return;\n      }\n      \n      if (response && response.success) {\n        resolve(true);\n      } else {\n        reject(new Error('Invalid ping response'));\n      }\n    });\n  });\n}\n\n// Handle messages from content script or side panel\nchrome.runtime.onMessage.addListener((message: Message, sender, sendResponse) => {\n  console.log('Background script received message:', message);\n\n  switch (message.type) {\n    case 'INIT':\n      // Handle initialization\n      sendResponse({ status: 'initialized' });\n      break;\n    \n    case 'VALIDATE_SERVER':\n      if (message.payload && message.payload.host && message.payload.port) {\n        validateServerIdentity(message.payload.host, message.payload.port)\n          .then(isValid => {\n            sendResponse({ isValid });\n          })\n          .catch(error => {\n            sendResponse({ isValid: false, error: error.message });\n          });\n        return true; // Will respond asynchronously\n      }\n      break;\n      \n    case 'API_REQUEST':\n      // Handle API requests directly\n      if (message.payload && message.payload.endpoint === '/api/chat') {\n        handleChatRoute(new Request(message.payload.url, {\n          method: 'POST',\n          headers: message.payload.headers || {},\n          body: message.payload.body ? JSON.stringify(message.payload.body) : undefined\n        }))\n          .then(response => {\n            response.json().then(data => {\n              sendResponse({ success: true, data });\n            });\n          })\n          .catch(error => {\n            sendResponse({ success: false, error: error.message });\n          });\n        return true; // Will respond asynchronously\n      }\n      break;\n    \n    // Handle Context7 API requests\n    case 'CONTEXT7_RESOLVE_LIBRARY_ID':\n      (async () => {\n        try {\n          console.log('Resolving library ID for:', message.libraryName);\n          const result = await resolveLibraryId(message.libraryName);\n          console.log('Resolve result:', result);\n          sendResponse(result);\n        } catch (error) {\n          console.error('Error resolving library ID:', error);\n          sendResponse({\n            success: false,\n            libraryId: null,\n            message: `Error resolving library ID: ${error instanceof Error ? error.message : String(error)}`\n          });\n        }\n      })();\n      return true; // Will respond asynchronously\n      \n    case 'CONTEXT7_GET_DOCUMENTATION':\n      (async () => {\n        try {\n          console.log('Getting documentation for:', message.libraryId, message.topic);\n          const result = await getDocumentation(\n            message.libraryId,\n            message.topic\n          );\n          console.log('Documentation result:', result.success, result.content?.substring(0, 50));\n          sendResponse(result);\n        } catch (error) {\n          console.error('Error getting documentation:', error);\n          sendResponse({\n            success: false,\n            content: null,\n            message: `Error getting documentation: ${error instanceof Error ? error.message : String(error)}`\n          });\n        }\n      })();\n      return true; // Will respond asynchronously\n    \n    case 'CONTEXT7_DATASET_INFO':\n      (async () => {\n        try {\n          console.log('Getting dataset info for:', message.topic);\n          \n          // First, search for the dataset\n          const searchResult = await resolveLibraryId(`Earth Engine ${message.topic}`);\n          \n          if (!searchResult.success || !searchResult.libraryId) {\n            sendResponse({\n              success: false,\n              message: `Could not find documentation for \"${message.topic}\". ${searchResult.message || ''}`,\n              alternatives: searchResult.alternatives,\n            });\n            return;\n          }\n          \n          // Then get documentation\n          const docResult = await getDocumentation(\n            searchResult.libraryId,\n            message.topic\n          );\n          \n          if (!docResult.success || !docResult.content) {\n            sendResponse({\n              success: false,\n              message: `Could not find documentation for topic \"${message.topic}\". ${docResult.message || ''}`,\n            });\n            return;\n          }\n          \n          sendResponse({\n            success: true,\n            content: docResult.content,\n            message: `Documentation found for topic: ${message.topic}`,\n          });\n        } catch (error) {\n          console.error('Error getting dataset info:', error);\n          sendResponse({\n            success: false,\n            message: `Error retrieving Earth Engine documentation: ${error instanceof Error ? error.message : String(error)}`,\n          });\n        }\n      })();\n      return true; // Will respond asynchronously\n    \n    // Earth Engine Tool Handlers\n    case 'RUN_CODE':\n      (async () => {\n        try {\n          console.log('Running Earth Engine code, length:', message.code?.length || 0);\n          console.log('Code snippet:', message.code?.substring(0, 50) + '...');\n          \n          const response = await sendMessageToEarthEngineTab(message);\n          console.log('Code execution response:', response);\n          sendResponse(response);\n        } catch (error) {\n          console.error('Error running Earth Engine code:', error);\n          sendResponse({\n            success: false,\n            error: `Error running Earth Engine code: ${error instanceof Error ? error.message : String(error)}`\n          });\n        }\n      })();\n      return true; // Will respond asynchronously\n      \n    case 'INSPECT_MAP':\n      (async () => {\n        try {\n          console.log('Inspecting Earth Engine map at coordinates:', message.coordinates);\n          \n          const response = await sendMessageToEarthEngineTab(message);\n          console.log('Map inspection response:', response);\n          sendResponse(response);\n        } catch (error) {\n          console.error('Error inspecting Earth Engine map:', error);\n          sendResponse({\n            success: false,\n            error: `Error inspecting Earth Engine map: ${error instanceof Error ? error.message : String(error)}`\n          });\n        }\n      })();\n      return true; // Will respond asynchronously\n      \n    case 'CHECK_CONSOLE':\n      (async () => {\n        try {\n          console.log('Checking Earth Engine console for errors');\n          \n          const response = await sendMessageToEarthEngineTab(message);\n          console.log('Console check response:', response);\n          sendResponse(response);\n        } catch (error) {\n          console.error('Error checking Earth Engine console:', error);\n          sendResponse({\n            success: false,\n            error: `Error checking Earth Engine console: ${error instanceof Error ? error.message : String(error)}`\n          });\n        }\n      })();\n      return true; // Will respond asynchronously\n      \n    case 'GET_TASKS':\n      (async () => {\n        try {\n          console.log('Getting Earth Engine tasks');\n          \n          const response = await sendMessageToEarthEngineTab(message);\n          console.log('Tasks response:', response);\n          sendResponse(response);\n        } catch (error) {\n          console.error('Error getting Earth Engine tasks:', error);\n          sendResponse({\n            success: false,\n            error: `Error getting Earth Engine tasks: ${error instanceof Error ? error.message : String(error)}`\n          });\n        }\n      })();\n      return true; // Will respond asynchronously\n      \n    case 'EDIT_SCRIPT':\n      (async () => {\n        try {\n          console.log('Editing Earth Engine script:', message.scriptId);\n          console.log('Script content length:', message.content?.length || 0);\n          \n          // Use longer timeout for editing scripts\n          const response = await sendMessageToEarthEngineTab(message, { \n            timeout: 10000, // 10-second timeout for script editing\n            retries: 2      // More retries for this operation\n          });\n          console.log('Script edit response:', response);\n          sendResponse(response);\n        } catch (error) {\n          console.error('Error editing Earth Engine script:', error);\n          sendResponse({\n            success: false,\n            error: `Error editing Earth Engine script: ${error instanceof Error ? error.message : String(error)}`\n          });\n        }\n      })();\n      return true; // Will respond asynchronously\n    \n    case 'CONTENT_SCRIPT_LOADED':\n      if (sender.tab && sender.tab.id) {\n        console.log(`Content script loaded in tab ${sender.tab.id}:`, message.url);\n        contentScriptTabs.set(sender.tab.id, true);\n      } else {\n        console.log('Content script loaded but sender tab info is missing');\n      }\n      sendResponse({ success: true, message: 'Background script acknowledged content script loading' });\n      break;\n    \n    case 'CONTENT_SCRIPT_HEARTBEAT':\n      if (sender.tab && sender.tab.id) {\n        console.log(`Content script heartbeat received from tab ${sender.tab.id}:`, message.url);\n        // Update the map to ensure we know this content script is active\n        contentScriptTabs.set(sender.tab.id, true);\n      } else {\n        console.log('Content script heartbeat received but sender tab info is missing');\n      }\n      sendResponse({ success: true, message: 'Background script acknowledged heartbeat' });\n      break;\n    \n    default:\n      console.warn('Unknown message type:', message.type);\n      sendResponse({ error: 'Unknown message type' });\n  }\n\n  // Return true to indicate we will send a response asynchronously\n  return true;\n});\n\n// Listen for side panel connections\nchrome.runtime.onConnect.addListener((port) => {\n  if (port.name === 'sidepanel') {\n    console.log('Side panel connected');\n    \n    port.onMessage.addListener(async (message: any) => {\n      console.log('Received message from side panel:', message);\n      \n      // Handle side panel specific messages\n      switch (message.type) {\n        case 'INIT':\n          port.postMessage({ type: 'INIT_RESPONSE', status: 'initialized' });\n          break;\n          \n        case 'CHAT_MESSAGE':\n          // Handle chat messages from side panel\n          handleChatMessage(message, port);\n          break;\n          \n        default:\n          console.warn('Unknown side panel message type:', message.type);\n          port.postMessage({ type: 'ERROR', error: 'Unknown message type' });\n      }\n    });\n\n    port.onDisconnect.addListener(() => {\n      console.log('Side panel disconnected');\n    });\n  }\n});\n\n// Helper function to handle chat messages\nasync function handleChatMessage(message: any, port: chrome.runtime.Port) {\n  try {\n    const requestId = Date.now().toString();\n    \n    // Instead of trying to use fetch to an API endpoint within the extension,\n    // directly call the handler function with properly formatted request\n    const body = {\n      messages: [{\n        role: 'user',\n        content: message.message\n      }],\n      apiKey: message.apiKey,\n      provider: message.provider\n    };\n    \n    // Create a request object for the handler\n    const request = new Request('chrome-extension://internal/api/chat', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${message.apiKey}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n\n    try {\n      // Call the handler directly instead of using fetch\n      const response = await handleChatRoute(request);\n      \n      if (response.headers.get('Content-Type')?.includes('text/plain')) {\n        // Handle streaming response\n        const reader = response.body?.getReader();\n        const decoder = new TextDecoder();\n        \n        if (reader) {\n          try {\n            let accumulatedText = '';\n            let buffer = '';\n            \n            while (true) {\n              const { done, value } = await reader.read();\n              \n              if (done) {\n                // Send final message with complete text\n                port.postMessage({ \n                  type: 'CHAT_RESPONSE',\n                  requestId,\n                  data: {\n                    choices: [{\n                      message: {\n                        content: accumulatedText\n                      }\n                    }]\n                  }\n                });\n                \n                // Also send end of stream message\n                port.postMessage({\n                  type: 'CHAT_STREAM_END',\n                  requestId\n                });\n                \n                break;\n              }\n              \n              // Decode the chunk with proper streaming setup\n              buffer += decoder.decode(value, { stream: true });\n              \n              // Process SSE format\n              const lines = buffer.split('\\n');\n              buffer = lines.pop() || ''; // Keep the last (potentially incomplete) line in the buffer\n              \n              for (const line of lines) {\n                if (line.startsWith('data: ')) {\n                  const data = line.slice(5); // Remove 'data: ' prefix\n                  \n                  // Handle [DONE] message\n                  if (data === '[DONE]') {\n                    continue;\n                  }\n                  \n                  try {\n                    const parsedData = JSON.parse(data);\n                    \n                    // Extract content from OpenAI response format\n                    if (parsedData.choices && parsedData.choices.length > 0) {\n                      const delta = parsedData.choices[0].delta;\n                      \n                      if (delta && delta.content) {\n                        const content = delta.content;\n                        accumulatedText += content;\n                        \n                        // Send only the actual content as a chunk\n                        port.postMessage({ \n                          type: 'CHAT_STREAM_CHUNK',\n                          requestId,\n                          chunk: content \n                        });\n                      }\n                    } \n                    // Handle Anthropic format (if needed)\n                    else if (parsedData.type === 'content_block_delta' && parsedData.delta && parsedData.delta.text) {\n                      const content = parsedData.delta.text;\n                      accumulatedText += content;\n                      \n                      port.postMessage({ \n                        type: 'CHAT_STREAM_CHUNK',\n                        requestId,\n                        chunk: content \n                      });\n                    }\n                  } catch (error) {\n                    console.warn('Error parsing SSE data:', error);\n                    // If parsing fails, ignore this line\n                  }\n                }\n              }\n            }\n          } catch (error) {\n            const errorMessage = error instanceof Error ? error.message : String(error);\n            console.error('Error reading stream:', errorMessage);\n            port.postMessage({ \n              type: 'ERROR',\n              requestId,\n              error: errorMessage \n            });\n          }\n        }\n      } else {\n        // Handle JSON response\n        const data = await response.json();\n        port.postMessage({ \n          type: 'CHAT_RESPONSE',\n          requestId,\n          data \n        });\n      }\n    } catch (error) {\n      console.error('Error processing chat:', error);\n      \n      // Use fallback mode\n      const fallbackResponse = {\n        type: 'CHAT_RESPONSE',\n        requestId,\n        data: {\n          choices: [{\n            message: {\n              content: \"I'm having trouble connecting to the API. Let me use my fallback mode to help you with Earth Engine.\\n\\n\" + \n                       generateFallbackResponse(message.message)\n            }\n          }]\n        }\n      };\n      \n      port.postMessage(fallbackResponse);\n    }\n  } catch (error) {\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    console.error('Chat processing error:', errorMessage);\n    port.postMessage({ \n      type: 'ERROR',\n      requestId: Date.now().toString(),\n      error: errorMessage \n    });\n  }\n}\n\n// Generate a fallback response for Earth Engine queries\nfunction generateFallbackResponse(query: string): string {\n  const keywords: Record<string, string> = {\n    'ndvi': 'NDVI (Normalized Difference Vegetation Index) can be calculated using: ```\\nvar ndvi = image.normalizedDifference([\"NIR\", \"RED\"]);\\n```',\n    'landsat': 'Landsat imagery can be accessed via: ```\\nvar landsat = ee.ImageCollection(\"LANDSAT/LC08/C02/T1_L2\")\\n```',\n    'sentinel': 'Sentinel imagery is available through: ```\\nvar sentinel = ee.ImageCollection(\"COPERNICUS/S2_SR\")\\n```',\n    'export': 'You can export images using Export.image.toDrive() or visualize them with Map.addLayer()',\n    'classify': 'For classification, use ee.Classifier methods like randomForest() or smileCart()',\n    'reducer': 'Reducers like mean(), sum(), or min() can aggregate data spatially or temporally'\n  };\n  \n  // Check if any keywords are in the query\n  for (const [key, response] of Object.entries(keywords)) {\n    if (query.toLowerCase().includes(key)) {\n      return response;\n    }\n  }\n  \n  // Default response\n  return \"I can help with Earth Engine tasks like image processing, classification, and data export. Could you provide more details about what you're trying to do?\";\n}"],"names":[],"sourceRoot":""}