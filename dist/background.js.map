{"version":3,"file":"background.js","mappings":"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","sources":["webpack://earth-agent-ai-sdk/./src/background/index.ts"],"sourcesContent":["// Types for messages between components\ninterface Message {\n  type: string;\n  payload?: any;\n}\n\n// Handle extension icon click\nchrome.action.onClicked.addListener(async (tab) => {\n  // Only open side panel if we're on the Earth Engine Code Editor\n  if (tab.url?.startsWith('https://code.earthengine.google.com/')) {\n    // Open the side panel\n    await chrome.sidePanel.open({ windowId: tab.windowId });\n    await chrome.sidePanel.setOptions({\n      enabled: true,\n      path: 'sidepanel.html'\n    });\n  } else {\n    // If not on Earth Engine, create a new tab with Earth Engine\n    await chrome.tabs.create({\n      url: 'https://code.earthengine.google.com/'\n    });\n  }\n});\n\n// Validate server identity with better error handling\nasync function validateServerIdentity(host: string, port: number): Promise<boolean> {\n  try {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 3000); // 3 second timeout\n    \n    const response = await fetch(`http://${host}:${port}/.identity`, {\n      signal: controller.signal,\n    });\n    \n    clearTimeout(timeoutId);\n    \n    if (!response.ok) {\n      console.error(`Invalid server response: ${response.status}`);\n      return false;\n    }\n\n    const identity = await response.json();\n\n    // Validate the server signature\n    if (identity && identity.signature === \"mcp-browser-connector-24x7\") {\n      return true;\n    } else {\n      console.error(\"Invalid server signature - not the browser tools server\");\n      return false;\n    }\n  } catch (error) {\n    // Handle network errors more gracefully\n    console.error(\"Error validating server identity:\", error);\n    \n    // Don't throw an error, just return false if we can't connect\n    return false;\n  }\n}\n\n// Handle messages from content script or side panel\nchrome.runtime.onMessage.addListener((message: Message, sender, sendResponse) => {\n  console.log('Background script received message:', message);\n\n  switch (message.type) {\n    case 'INIT':\n      // Handle initialization\n      sendResponse({ status: 'initialized' });\n      break;\n    \n    case 'VALIDATE_SERVER':\n      if (message.payload && message.payload.host && message.payload.port) {\n        validateServerIdentity(message.payload.host, message.payload.port)\n          .then(isValid => {\n            sendResponse({ isValid });\n          })\n          .catch(error => {\n            sendResponse({ isValid: false, error: error.message });\n          });\n        return true; // Will respond asynchronously\n      }\n      break;\n    \n    default:\n      console.warn('Unknown message type:', message.type);\n      sendResponse({ error: 'Unknown message type' });\n  }\n\n  // Return true to indicate we will send a response asynchronously\n  return true;\n});\n\n// Listen for side panel connections\nchrome.runtime.onConnect.addListener((port) => {\n  if (port.name === 'sidepanel') {\n    console.log('Side panel connected');\n    \n    port.onMessage.addListener((message: Message) => {\n      console.log('Received message from side panel:', message);\n      // Handle side panel specific messages here\n    });\n\n    port.onDisconnect.addListener(() => {\n      console.log('Side panel disconnected');\n    });\n  }\n});"],"names":[],"sourceRoot":""}