{"version":3,"file":"content.js","mappings":"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","sources":["webpack://earth-agent-ai-sdk/./src/content/index.ts"],"sourcesContent":["// Types\ninterface Message {\n  type: string;\n  payload?: any;\n  code?: string;\n  coordinates?: {lat: number, lng: number};\n  scriptId?: string;\n  content?: string;\n}\n\n// Initialize content script immediately to catch messages early\nconsole.log('Earth Engine AI Assistant content script loading at:', new Date().toISOString());\n\n// Notify background script that content script is loaded\nfunction notifyBackgroundScript() {\n  chrome.runtime.sendMessage({ \n    type: 'CONTENT_SCRIPT_LOADED', \n    url: window.location.href,\n    timestamp: Date.now() \n  }, (response) => {\n    console.log('Content script loaded notification response:', response);\n  });\n}\n\n// Setup message listener immediately (don't wait for DOMContentLoaded)\nchrome.runtime.onMessage.addListener((message: Message, sender, sendResponse) => {\n  console.log('Content script received message:', message, 'at:', new Date().toISOString());\n\n  switch (message.type) {\n    case 'GET_EDITOR_CONTENT':\n      // TODO: Implement editor content retrieval\n      sendResponse({ content: 'Not implemented yet' });\n      break;\n\n    case 'RUN_CODE':\n      handleRunCode(message.code || '', sendResponse);\n      return true; // Will respond asynchronously\n\n    case 'CHECK_CONSOLE':\n      handleCheckConsole(sendResponse);\n      return true; // Will respond asynchronously\n\n    case 'INSPECT_MAP':\n      handleInspectMap(message.coordinates, sendResponse);\n      return true; // Will respond asynchronously\n\n    case 'GET_TASKS':\n      handleGetTasks(sendResponse);\n      return true; // Will respond asynchronously\n\n    case 'EDIT_SCRIPT':\n      handleEditScript(message.scriptId, message.content, sendResponse);\n      return true; // Will respond asynchronously\n\n    case 'PING':\n      // Simple ping to check if content script is loaded\n      sendResponse({ \n        success: true, \n        message: 'Content script is active', \n        timestamp: Date.now() \n      });\n      break;\n\n    default:\n      console.warn('Unknown message type:', message.type);\n      sendResponse({ success: false, error: 'Unknown message type' });\n  }\n\n  return true; // Will respond asynchronously\n});\n\n/**\n * Handles the RUN_CODE message by clicking the run button in the Earth Engine editor\n */\nasync function handleRunCode(code: string, sendResponse: (response: any) => void) {\n  try {\n    console.log('Handling RUN_CODE message, clicking run button');\n    \n    // Find the run button by its class and title attributes\n    // GEE editor has a button with class \"goog-button run-button\" and title \"Run script (Ctrl+Enter)\"\n    const runButton = document.querySelector('button.goog-button.run-button[title=\"Run script (Ctrl+Enter)\"]');\n    \n    if (!runButton) {\n      // Fallback to alternative selectors if the specific one fails\n      const fallbackButton = document.querySelector('.run-button') || \n                            document.querySelector('button[title*=\"Run script\"]') ||\n                            document.querySelector('button.goog-button[value=\"Run\"]');\n      \n      if (!fallbackButton) {\n        console.error('Run button not found');\n        sendResponse({\n          success: false,\n          error: 'Run button not found in the Google Earth Engine editor'\n        });\n        return;\n      }\n      \n      console.log('Using fallback run button selector');\n      (fallbackButton as HTMLElement).click();\n    } else {\n      // Click the run button\n      (runButton as HTMLElement).click();\n    }\n    \n    // Wait for a short time to allow the button state to change\n    setTimeout(() => {\n      // We successfully clicked the button\n      sendResponse({\n        success: true,\n        result: 'Run button clicked successfully'\n      });\n    }, 500);\n  } catch (error) {\n    console.error('Error executing Earth Engine code:', error);\n    sendResponse({\n      success: false,\n      error: `Error executing Earth Engine code: ${error instanceof Error ? error.message : String(error)}`\n    });\n  }\n}\n\n/**\n * Handles checking the Earth Engine console for errors\n */\nfunction handleCheckConsole(sendResponse: (response: any) => void) {\n  try {\n    // Find console output element\n    const consoleOutput = document.querySelector('.console-output');\n    \n    if (!consoleOutput) {\n      sendResponse({\n        success: true,\n        errors: []\n      });\n      return;\n    }\n    \n    // Get error elements from the console\n    const errorElements = consoleOutput.querySelectorAll('.error, .warning');\n    const errors = Array.from(errorElements).map(el => ({\n      type: el.classList.contains('error') ? 'error' : 'warning',\n      message: el.textContent || 'Unknown error'\n    }));\n    \n    sendResponse({\n      success: true,\n      errors\n    });\n  } catch (error) {\n    sendResponse({\n      success: false,\n      error: `Error checking console: ${error instanceof Error ? error.message : String(error)}`\n    });\n  }\n}\n\n/**\n * Handles inspecting the map at specific coordinates\n */\nfunction handleInspectMap(coordinates: {lat: number, lng: number} | undefined, sendResponse: (response: any) => void) {\n  try {\n    if (!coordinates) {\n      sendResponse({\n        success: false,\n        error: 'No coordinates provided'\n      });\n      return;\n    }\n    \n    // This is a placeholder - actual implementation would need to interact with Earth Engine map\n    // and might require injecting code to use the Map.onClick() or similar Earth Engine API\n    sendResponse({\n      success: true,\n      data: {\n        location: coordinates,\n        message: 'Map inspection not fully implemented yet. This is a placeholder response.'\n      }\n    });\n  } catch (error) {\n    sendResponse({\n      success: false,\n      error: `Error inspecting map: ${error instanceof Error ? error.message : String(error)}`\n    });\n  }\n}\n\n/**\n * Handles getting Earth Engine tasks\n */\nfunction handleGetTasks(sendResponse: (response: any) => void) {\n  try {\n    // This is a placeholder - actual implementation would need to access the Earth Engine \n    // task list from the UI or by executing code in the Earth Engine context\n    sendResponse({\n      success: true,\n      tasks: [],\n      message: 'Task retrieval not fully implemented yet. This is a placeholder response.'\n    });\n  } catch (error) {\n    sendResponse({\n      success: false,\n      error: `Error getting tasks: ${error instanceof Error ? error.message : String(error)}`\n    });\n  }\n}\n\n/**\n * Handles editing an Earth Engine script\n */\nfunction handleEditScript(scriptId: string | undefined, content: string | undefined, sendResponse: (response: any) => void) {\n  try {\n    if (!scriptId || !content) {\n      sendResponse({\n        success: false,\n        error: 'Script ID and content are required'\n      });\n      return;\n    }\n    \n    // This is a placeholder - actual implementation would need to interact with \n    // Earth Engine script management APIs or UI elements\n    sendResponse({\n      success: true,\n      message: `Script editing not fully implemented yet. This would edit script ${scriptId}.`\n    });\n  }\n  catch (error) {\n    sendResponse({\n      success: false,\n      error: `Error editing script: ${error instanceof Error ? error.message : String(error)}`\n    });\n  }\n}\n\n// Also initialize when DOM content is loaded to make sure we have access to the page elements\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', notifyBackgroundScript);\n} else {\n  notifyBackgroundScript();\n} "],"names":[],"sourceRoot":""}